name: Manually Build Distroless Unbound Docker Image
   
on:   
  push:
    branches: [ main ]
    paths:
      - '!**'
      - '.github/workflows/manually-build-unbound.yaml'
 
jobs:   
  buildvars:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_BUILD_DATE: ${{ steps.IMPORT_BUILDVARS.outputs.IMAGE_BUILD_DATE }}
      UNBOUND_VERSION: ${{ steps.IMPORT_BUILDVARS.outputs.UNBOUND_VERSION }}
      UNBOUND_SHA256: ${{ steps.IMPORT_BUILDVARS.outputs.UNBOUND_SHA256 }}
      
    steps: 
      - uses: step-security/harden-runner@v2
        with:
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: 
            github.com:443
            objects.githubusercontent.com:443
            pipelines.actions.githubusercontent.com:443 
            actions-results-receiver-production.githubapp.com:443
            
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Import build variables from buildvars file
        id: IMPORT_BUILDVARS
        run: |
          echo IMAGE_BUILD_DATE=$(date -u) >> $GITHUB_OUTPUT
          cat buildvars | grep UNBOUND_VERSION >> $GITHUB_OUTPUT
          cat buildvars | grep UNBOUND_SHA256 >> $GITHUB_OUTPUT     
          
  build: 
    runs-on: ubuntu-latest    
    needs: buildvars
    steps:
      - uses: step-security/harden-runner@v2
        with:
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: 
            dl-cdn.alpinelinux.org:443
            github.com:443
            docker.io:433
            index.docker.io:433
            auth.docker.io:443
            registry-1.docker.io:443
            production.cloudflare.docker.com:443
            objects.githubusercontent.com:443
            nlnetlabs.nl:443
            www.internic.net:443
            keys.openpgp.org:443
            pipelines.actions.githubusercontent.com:443 
            actions-results-receiver-production.githubapp.com:443

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
     
      - name: Login to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
              
      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          DOCKERHUB_SLUG: "madnuttah/unbound"
          UNBOUND_DOCKER_IMAGE_VERSION: "1.19.1-x"
          IMAGE_BUILD_DATE: ${{ needs.buildvars.outputs.IMAGE_BUILD_DATE}}
          UNBOUND_VERSION: ${{ needs.buildvars.outputs.UNBOUND_VERSION }}  
          UNBOUND_SHA256: ${{ needs.buildvars.outputs.UNBOUND_SHA256 }}  
        with:
          platforms: linux/386,linux/arm/v6,linux/arm/v7,linux/arm64,linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            DOCKERHUB_SLUG=${{ env.DOCKERHUB_SLUG }} 
            UNBOUND_SHA256=${{ env.UNBOUND_SHA256 }} 
            IMAGE_BUILD_DATE=${{ env.IMAGE_BUILD_DATE }} 
            UNBOUND_VERSION=${{ env.UNBOUND_VERSION }} 
            UNBOUND_DOCKER_IMAGE_VERSION=${{ env.UNBOUND_DOCKER_IMAGE_VERSION }}
          file: ./unbound/Dockerfile   
          push: ${{ github.event_name != 'pull_request' }}
          sbom: ${{ github.event_name != 'pull_request' }}
          provenance: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKERHUB_SLUG }}:${{ env.UNBOUND_DOCKER_IMAGE_VERSION }}      
            ${{ env.DOCKERHUB_SLUG }}:latest